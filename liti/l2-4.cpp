#include <iostream>
#include <cstdio>
#include <cstdlib>
using namespace std;
int main()
{
    // int a,b;
    //cin >> a >>b;
    // cout << (a < b ? a : b) << endl;
    cout << (2225 & 0xff) << endl; //177   0b100010110001&0b11111111=0b10110001=177       //1&1=1,1&0=0,0&0=0
    cout << (2225 & 0xfe) << endl; //176   0b100010110001&0b11111110=0b10110000=176
    cout << (2225 | 0xff) << endl; //2303  0b100010110001|0b11111111=0b100011111111=2303  //1|1=1,1|0=1,0|0=0
    cout << (2225 ^ 0xfe) << endl; //2127  0b100010110001^0b11111110=0b100001001111=2127  //1^1=0 1^0=1 0^0=0
    cout << (~2225) << endl;       //-2226 ~0b0000100010110001=0b1111011101001110  0b1111011101001110补码=0b1000100010110010=-0b000100010110010=-2226
    cout << (~-2225) << endl;     //2224  0b1000100010110001补码=0b1111011101001111 ~0b1111011101001111=0b0000100010110000=+0b000100010110000=2224
    /*
    正数：取反 补码
    负数：补码 取反
    ~x=-x-1
    */
    cout << (2225 >> 2) << endl;  //556=2225/4  0b0000100010110001>>2=0b0000001000101100
    cout << (-2225 >> 2) << endl; //-557=-2225/4  0b1000100010110001补码=0b1111011101001111>>2=0b1111110111010011补码=0b1000001000101101=-0b000001000101101=-557
    cout << (2225 << 2) << endl;  //8900=2225*4 0b0000100010110001<<2=0b0010001011000100=8900
    //cout << (-97<< 2) << endl;//-388
    //cout << (-12385<< 2) << endl; //-49540
    //cout << (-1879048193<< 2) << endl;//1073741820
    //cout << ((long long)-1879048193ll<< 2) << endl;//-7516192772
    //cout << (-1879048193ll<< 2) << endl;//-7516192772
    //cout << ((long long)-1879048193<< 2) << endl;//-7516192772
    //cout << ((int64_t)(-1879048193)<< 2) << endl;//-7516192772
    //cout << ((int64_t)(-1879048193ll)<< 2) << endl;//-7516192772
    //cout << ((__int64)(-1879048193ll)<< 2) << endl;//-7516192772
    //cout << ((__int64)-1879048193ll<< 2) << endl;//-7516192772
    //-97的左位移//原码：0b1000000001100001
    //补码：0b1111111110011111
    //左移: 0b1111111001111100
    //补码：0b1000000110000100
    //识别：-0b110000100=-388

    //short(-12385)
   //原码：0b1011000001100001
   //补码：0b1100111110011111
   //左移：0b0011111001111100
   //补码：0b0011111001111100=15996-65536=-49540 //可能自动添加为int 32位

   // -1879048193<<2 测试位数更大的数
   //原码：0b11110000000000000000000000000001
   //补码：0b10001111111111111111111111111111
   //左移：0b00111111111111111111111111111100
   //补码：0b00111111111111111111111111111100=1073741820   //此处没有变为long long或int64_t(__int64) 处理

    //正数负数在内存中以补码存在，正数补码与原码相同
    //位移前，求补码，位移后，在求补码
    //负数左移位会报警
    system("pause");
}
